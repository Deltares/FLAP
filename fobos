[modes]
modes = shared-gnu static-gnu flap-test-gnu
        shared-gnu-debug static-gnu-debug flap-test-gnu-debug
        shared-intel static-intel flap-test-intel
        shared-intel-debug static-intel-debug flap-test-intel-debug

[common-variables]
$CSHARED_GNU = -cpp -c -fPIC -frealloc-lhs
$CSHARED_INT = -cpp -c -fpic -assume realloc_lhs
$LSHARED     = -shared
$CSTATIC_GNU = -cpp -c -frealloc-lhs
$CSTATIC_INT = -cpp -c -assume realloc_lhs
$DEBUG_GNU   = -O0 -g3 -Warray-bounds -Wcharacter-truncation -Wline-truncation -Wimplicit-interface -Wimplicit-procedure -Wunderflow -Wuninitialized -fcheck=all -fmodule-private -ffree-line-length-132 -fimplicit-none -fbacktrace -fdump-core -finit-real=nan -std=f2003 -fall-intrinsics
$DEBUG_INT   = -O0 -debug all -check all -warn all -extend-source 132 -traceback -gen-interfaces#-fpe-all=0 -fp-stack-check -fstack-protector-all -ftrapuv -no-ftz -std03
$OPTIMIZE    = -O2

# main modes
[shared-gnu]
template  = template-shared-gnu
target    = src/Data_Type_Command_Line_Interface.f90
build_dir = ./shared/
output    = FLAP.so
mklib     = shared

[static-gnu]
template  = template-static-gnu
target    = src/Data_Type_Command_Line_Interface.f90
build_dir = ./static/
output    = FLAP.a
mklib     = static

[flap-test-gnu]
template = template-static-gnu
target   = src/flap_test.f90
build_dir = ./flap_test/
output   = flap_test

[shared-gnu-debug]
template = template-shared-gnu-debug
target   = src/Data_Type_Command_Line_Interface.f90
output   = FLAP.so
mklib    = shared

[static-gnu-debug]
template = template-static-gnu-debug
target   = src/Data_Type_Command_Line_Interface.f90
output   = FLAP.a
mklib    = static

[flap-test-gnu-debug]
template  = template-static-gnu-debug
target    = src/flap_test.f90
build_dir = ./flap_test/
output    = flap_test

[shared-intel]
template  = template-shared-intel
target    = src/Data_Type_Command_Line_Interface.f90
build_dir = ./shared/
output    = FLAP.so
mklib     = shared

[static-intel]
template  = template-static-intel
target    = src/Data_Type_Command_Line_Interface.f90
build_dir = ./static/
output    = FLAP.a
mklib     = static

[flap-test-intel]
template = template-static-intel
target   = src/flap_test.f90
build_dir = ./flap_test/
output   = flap_test

[shared-intel-debug]
template = template-shared-intel-debug
target   = src/Data_Type_Command_Line_Interface.f90
output   = FLAP.so
mklib    = shared

[static-intel-debug]
template = template-static-intel-debug
target   = src/Data_Type_Command_Line_Interface.f90
output   = FLAP.a
mklib    = static

[flap-test-intel-debug]
template  = template-static-intel-debug
target    = src/flap_test.f90
build_dir = ./flap_test/
output    = flap_test

#templates
[template-shared-gnu]
compiler = gnu
cflags   = $CSHARED_GNU $OPTIMIZE
lflags   = $LSHARED_GNU $OPTIMIZE
mod_dir  = ./mod/
obj_dir  = ./obj/
src      = ./src/
colors   = True
quiet    = False
log      = True
jobs     = 2

[template-static-gnu]
compiler = gnu
cflags   = $CSTATIC_GNU $OPTIMIZE
lflags   = $OPTIMIZE
mod_dir  = ./mod/
obj_dir  = ./obj/
src      = ./src/
colors   = True
quiet    = False
log      = True
jobs     = 2

[template-shared-gnu-debug]
compiler = gnu
cflags   = $CSHARED_GNU $DEBUG_GNU
lflags   = $LSHARED_GNU $DEBUG_GNU
mod_dir  = ./mod/
obj_dir  = ./obj/
src      = ./src/
colors   = True
quiet    = False
log      = True
jobs     = 2

[template-static-gnu-debug]
compiler = gnu
cflags   = $CSTATIC_GNU $DEBUG_GNU
lflags   = $DEBUG_GNU
mod_dir  = ./mod/
obj_dir  = ./obj/
src      = ./src/
colors   = True
quiet    = False
log      = True
jobs     = 2

[template-shared-intel]
compiler = intel
cflags   = $CSHARED_INT $OPTIMIZE
lflags   = $LSHARED_INT $OPTIMIZE
mod_dir  = ./mod/
obj_dir  = ./obj/
src      = ./src/
colors   = True
quiet    = False
log      = True
jobs     = 2

[template-static-intel]
compiler = intel
cflags   = $CSTATIC_INT $OPTIMIZE
lflags   = $OPTIMIZE
mod_dir  = ./mod/
obj_dir  = ./obj/
src      = ./src/
colors   = True
quiet    = False
log      = True
jobs     = 2

[template-shared-intel-debug]
compiler = intel
cflags   = $CSHARED_INT $DEBUG_INT
lflags   = $LSHARED_INT $DEBUG_INT
mod_dir  = ./mod/
obj_dir  = ./obj/
src      = ./src/
colors   = True
quiet    = False
log      = True
jobs     = 2

[template-static-intel-debug]
compiler = intel
cflags   = $CSTATIC_INT $DEBUG_INT
lflags   = $DEBUG_INT
mod_dir  = ./mod/
obj_dir  = ./obj/
src      = ./src/
colors   = True
quiet    = False
log      = True
jobs     = 2

[rule-makedoc]
help   = Rule for building documentation from source files
rule_1 = rm -rf doc/html/*
rule_2 = ford doc/main_page.md
rule_3 = cp -r doc/html/publish/* doc/html/
